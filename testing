resource "confluent_service_account" "tennis" {
  display_name = "tennis"
  description  = "Service account to manage 'dev' Kafka cluster"
}

resource "confluent_role_binding" "tennis-kafka-cluster-admin" {
  principal   = "User:${confluent_service_account.tennis.id}"
  role_name   = "CloudClusterAdmin"
  crn_pattern = confluent_kafka_cluster.basic.rbac_crn
}

resource "confluent_role_binding" "billy-tennis-kafka-cluster-admin" {
  principal   = "User:u-xmn27x"
  role_name   = "CloudClusterAdmin"
  crn_pattern = confluent_kafka_cluster.basic.rbac_crn
}

resource "confluent_api_key" "tennis-kafka-api-key" {
  display_name = "tennis-kafka-api-key"
  description  = "Kafka API Key that is owned by 'tennis' service account"
  owner {
    id          = confluent_service_account.tennis.id
    api_version = confluent_service_account.tennis.api_version
    kind        = confluent_service_account.tennis.kind
  }

  managed_resource {
    id          = confluent_kafka_cluster.basic.id
    api_version = confluent_kafka_cluster.basic.api_version
    kind        = confluent_kafka_cluster.basic.kind

    environment {
      id = confluent_environment.deng.id
    }
  }

  depends_on = [
    confluent_role_binding.tennis-kafka-cluster-admin,
    confluent_role_binding.billy-tennis-kafka-cluster-admin,
    confluent_role_binding.billy-environment-admin
  ]
}

resource "confluent_service_account" "tennis-generic-consumer" {
  display_name = "tennis-generic-consumer"
  description  = "Service account to consume from 'img-pbp' topic of 'dev' Kafka cluster"
}

resource "confluent_api_key" "tennis-generic-consumer-kafka-api-key" {
  display_name = "tennis-generic-consumer-kafka-api-key"
  description  = "Kafka API Key that is owned by 'tennis-generic-consumer' service account"
  owner {
    id          = confluent_service_account.tennis-generic-consumer.id
    api_version = confluent_service_account.tennis-generic-consumer.api_version
    kind        = confluent_service_account.tennis-generic-consumer.kind
  }

  managed_resource {
    id          = confluent_kafka_cluster.basic.id
    api_version = confluent_kafka_cluster.basic.api_version
    kind        = confluent_kafka_cluster.basic.kind

    environment {
      id = confluent_environment.deng.id
    }
  }
}

resource "confluent_kafka_acl" "tennis-generic-producer-write-on-topic" {
  kafka_cluster {
    id = confluent_kafka_cluster.basic.id
  }
  resource_type = "TOPIC"
  resource_name = "img-"
  pattern_type  = "PREFIXED"
  principal     = "User:${confluent_service_account.tennis-generic-producer.id}"
  host          = "*"
  operation     = "WRITE"
  permission    = "ALLOW"
  rest_endpoint = confluent_kafka_cluster.basic.rest_endpoint
  credentials {
    key    = confluent_api_key.tennis-kafka-api-key.id
    secret = confluent_api_key.tennis-kafka-api-key.secret
  }
}

resource "confluent_service_account" "tennis-generic-producer" {
  display_name = "tennis-generic-producer"
  description  = "Service account to produce to 'img-pbp' topic of 'dev' Kafka cluster"
}

resource "confluent_api_key" "tennis-generic-producer-kafka-api-key" {
  display_name = "tennis-generic-producer-kafka-api-key"
  description  = "Kafka API Key that is owned by 'tennis-generic-producer' service account"
  owner {
    id          = confluent_service_account.tennis-generic-producer.id
    api_version = confluent_service_account.tennis-generic-producer.api_version
    kind        = confluent_service_account.tennis-generic-producer.kind
  }

  managed_resource {
    id          = confluent_kafka_cluster.basic.id
    api_version = confluent_kafka_cluster.basic.api_version
    kind        = confluent_kafka_cluster.basic.kind

    environment {
      id = confluent_environment.deng.id
    }
  }
}
resource "confluent_kafka_acl" "tennis-generic-consumer-read-on-topic" {
  kafka_cluster {
    id = confluent_kafka_cluster.basic.id
  }
  resource_type = "TOPIC"
  resource_name = "img-"
  pattern_type  = "PREFIXED"
  principal     = "User:${confluent_service_account.tennis-generic-consumer.id}"
  host          = "*"
  operation     = "READ"
  permission    = "ALLOW"
  rest_endpoint = confluent_kafka_cluster.basic.rest_endpoint
  credentials {
    key    = confluent_api_key.tennis-kafka-api-key.id
    secret = confluent_api_key.tennis-kafka-api-key.secret
  }
}

resource "confluent_kafka_acl" "tennis-generic-consumer-read-on-group" {
  kafka_cluster {
    id = confluent_kafka_cluster.basic.id
  }
  resource_type = "GROUP"
  resource_name = "img-"
  pattern_type  = "PREFIXED"
  principal     = "User:${confluent_service_account.tennis-generic-consumer.id}"
  host          = "*"
  operation     = "READ"
  permission    = "ALLOW"
  rest_endpoint = confluent_kafka_cluster.basic.rest_endpoint
  credentials {
    key    = confluent_api_key.tennis-kafka-api-key.id
    secret = confluent_api_key.tennis-kafka-api-key.secret
  }
}

resource "confluent_service_account" "env-manager" {
  display_name = "env-manager"
  description  = "Service account to manage 'deng' environment"
}

resource "confluent_role_binding" "env-manager-environment-admin" {
  principal   = "User:${confluent_service_account.env-manager.id}"
  role_name   = "EnvironmentAdmin"
  crn_pattern = confluent_environment.deng.resource_name
}

resource "confluent_role_binding" "billy-env-manager-environment-admin" {
  principal   = "User:u-xmn27x"
  role_name   = "EnvironmentAdmin"
  crn_pattern = confluent_environment.deng.resource_name
}
