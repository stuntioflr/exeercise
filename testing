resource=("aws_iam_user\." "aws_iam_access_key\." "aws_iam_group\." "aws_iam_group_membership\." "aws_iam_group_membership\." "aws_iam_policy\.")
#resource=("aws_iam_policy\.")
team=("swe_users" "product_users" "devsecops_users" "ds_de_users" "client_reporting_users" "trading_users")
team_key=("swe_keys" "product_keys" "devsecops_keys" "ds_de_keys" "client_reporting_keys" "trading_keys")

for i in ${!resource[@]};
  do
      if [ "aws_iam_user" == "`cat list.bkp | grep "${resource[$i]}" | sed 's/\..*//' | head -1`" ];
      then
        count=0
        for j in $(cat list.bkp | grep "${resource[$i]}" | sed 's/.*\.//');
        do
          t=`echo "$j" | awk -F "[" '{print $1}'`
          if [[ " ${team[@]} " =~ " $t " ]];
          then
            k=`echo "$j" | grep -o "\[[^]]*\]"`
            x=
            echo "$j ========== module.iam-users.${resource[$i]}.user[$count]" | sed 's/\\.//'
          fi
          let count+=1
        done
      fi
  done


for i in ${!resource[@]};
  do
# for iam_user_access_key
      count=0
      for j in $(cat list.bkp | grep "${resource[$i]}" | sed 's/.*\.//');
      do
        if [ "aws_iam_access_key" == "`cat list.bkp | grep "${resource[$i]}" | sed 's/\..*//' | head -1`" ];
        then
          t=`echo "$j" | awk -F "[" '{print $1}'`
          if [[ " ${team_key[@]} " =~ " $t " ]];
          then
            k=`echo "$j" | grep -o "\[[^]]*\]"`
            x=
            echo "$j ========== module.iam-users.${resource[$i]}.user_key[$count]" | sed 's/\\.//'
            let count+=1
          fi
        fi
      done
  done

for i in ${!resource[@]};
  do
      count=0
      if [ "aws_iam_group" == "`cat list.bkp | grep "${resource[$i]}" | sed 's/\..*//' | head -1`" ];
      then
        for j in $(cat list.bkp | grep "${resource[$i]}" | sed 's/.*\.//');
        do
          #echo "$j ========== module.iam-user.${resource[$i]}.group[$count]" | sed 's/\\.//'
          let count+=1
        done
      fi
  done

for i in ${!resource[@]};
  do
      count=0
      if [ "aws_iam_group_membership" == "`cat list.bkp | grep "${resource[$i]}" | sed 's/\..*//' | head -1`" ];
      then
        for j in $(cat list.bkp | grep "${resource[$i]}" | sed 's/.*\.//');
        do
          echo "$j ========== module.iam-user.${resource[$i]}.group[$count]" | sed 's/\\.//'
          let count+=1
        done
      fi
  done

      cat list.bkp | grep "aws_iam_policy" | sed 's/^data.*//' | sed "/^$/d" > policy_name
      count=0
      if [ "aws_iam_policy" == "`cat list.bkp | grep "aws_iam_policy" | sed 's/^data.*//' | sed "/^$/d" | sed 's/\..*//' | head -1`" ]
      then
        for j in $(cat policy_name | sed 's/.*\.//');
        do
            echo "$j ================ module.iam-user.aws_iam_policy.policy[$count]" | sed 's/\\.//'
            let count+=1
        done
      fi
      rm -rf policy_name


variable iam_policy_description {
  default = [
    "Athena access for DS/DE teams",
    "Billing read access",
    "client-reporting-access",
    
  ]
}


for i in ${!resource[@]};
do
  if [ "random_string" == "`cat list.bkp | grep "${resource[$i]}" | sed 's/\..*//' | head -1`" ];
      then
        count=0
        for j in $(cat list.bkp | grep "${resource[$i]}" | sed 's/.*\.//');
        do 
          t=`echo "$j" | awk -F "[" '{print $1}'`
          if [[ " ${random_team[@]} " =~ " $t " ]];
          then
            module_name=`echo "module.iam-users.${resource[$i]}.user[$count]" | sed 's/\\\.//'`
            echo "$j ================ $module_name"
            terraform state mv "random_string.$j" $module_name
            let count+=1
          fi
        done
  fi
done
